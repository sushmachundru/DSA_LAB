BUBBLE SORT ALGORITHM:

#include <stdio.h>
void main()
{
int array[100], n, a, b, temp;
printf("Enter number of elements\n");
scanf("%d", &n);
printf("Enter %d integers\n", n);
for (a = 0; a < n; a++)
scanf("%d", &array[a]);
for (a = 0 ; a < n - 1; a++)
{
 for (b = 0 ; b < n - a - 1; b++)
  {
    if (array[b] > array[b+1]) 
     {
        temp = array[b];
        array[b] = array[b+1];
        array[b+1] = temp;}}
}

printf("Sorted list in ascending order:\n");
for (a = 0; a < n; a++)
  printf("%d\n", array[a]);
}

SELECTION SORT ALGORITHM:

#include <stdio.h>
void main()
{

int array[100], n, a, b, position, temp;
printf("Enter number of elements\n");
scanf("%d", &n);
printf("Enter %d integers\n", n);

for (a = 0; a < n; a++)
  scanf("%d", &array[a]);
for (a = 0; a < (n - 1); a++)
{
   position = a;
    for (b = a + 1; b < n; b++)
   {
     if (array[position] > array[d])
        position = b;
    }
   if (position != a)
      {
         temp = array[a];
         array[a] = array[position];
         array[position] = temp;
       }}
printf("Sorted array in ascending order:\n");
for (a = 0; a < n; a++)
   printf("%d\n", array[a]);
}

INSERTION SORT ALGORITHM:

#include <stdio.h>
void main()
{

int n, array[100], a, b, k;
printf("Enter number of elements\n");
scanf("%d", &n);
printf("Enter %d integers\n", n);
for (a = 0; a < n; a++)
  scanf("%d", &array[a]);

for (a = 1 ; a <= n - 1; a++)
  {
     b = a;

  while ( b > 0 && array[b-1] > array[b])
    {
      t = array[b];
      array[b] = array[b-1];
      array[b-1] = k;
       d--;}
}
printf("Sorted array in ascending order:\n");
for (a = 0; a <= n - 1; a++) 
 {
   printf("%d\n", array[a]);}
}


MERGE SORT ALGORITHM:

include<stdio.h>
void merge(int arr[], int a, int b, int c)
{
int i, j, k;
int n1 = b - a + 1;
int n2 = c - b;
int A[n1], C[n2];

for (i = 0; i < n1; i++)
  A[i] = arr[a + i];
for (j = 0; j < n2; j++)
   C[j] = arr[b + 1+ j];
    i = 0;
    j = 0;
    k = a;
while (i < n1 && j < n2)
{
  if (A[i] <= C[j])
   {
     arr[k] = A[i];
      i++;
    }
   else
    {
      arr[k] = C[j];
      j++;
    }
k++;
}
while (i < n1)
{
  arr[k] = A[i];
  i++;
  k++;
}
while (j < n2)
{
  arr[k] = C[j];
   j++;
   k++;}
}

HEAP SORT ALGORITHM:

#include<stdio.h>
void heapify_function(int arr[])
{
    int i,n;
    n = array[0];
    for(i=n/2; i>=1; i--)
    adjust(array,i);
}
void adjust(int arr[],int i)
{
    int j, temp, n, k=1;
    n=array[0];
    while(2*i<=n && k==1)
    {
       j=2*i;
       if(j+1<=n && array[j+1] > array[j])
           j=j+1;

       if( array[j] < arr[i])
           k=0;
       else
       {
           temp=arr[i];
           array[i]=array[j];
           array[j]=temp;
           i=j;
        }
      }
}

void main()
{
int arr[100], n, temp, last, i;
printf("Number of elements in array: \n");
scanf("%d",&n);
printf("Enter Elements in array:\n");
for(i=1; i<=n; i++)
scanf("%d",&array[i]);
arr[0]=n;
heapify_function(arr);
while(arr[0] > 1)
{
    last=array[0];
    temp=array[1];
    array[1]=array[last];
    array[last]=temp;
    array[0]--;
    adjust(array,1);
}

printf("Array After Heap Sort\n");
for(i=1;i<=n;i++)
  printf("%d ",array[i]);
}